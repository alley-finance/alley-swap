{"version":3,"sources":["../node_modules/milagro-crypto-js/src sync /^/.*$","AppState.js","contracts.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AppStateSlice","createSlice","name","initialState","chainConfig","config","hasPendingTx","account","balances","USDT","SUSD","USDC","blockchain","height","liquidity","reducers","login","state","action","payload","logout","setPendingTx","updateBalance","key","updateBlockchain","assign","actions","fetchBalances","coins","a","args","type","value","balanceFutures","coin","client","api","smartContract","invokeRead","scriptHash","address","operation","Promise","all","results","i","balance","utils","bigIntFromBytes","BigNumber","div","decimal","toNumber","exchange","tokenIn","tokenOut","inAmount","minOutAmount","tokenInInfo","find","v","tokenOutInfo","params","contract_addr","gasPrice","gasLimit","index","multipliedBy","toFixed","console","log","invokeWasm","response","getSwappedTokenAmount","amount","underlyingAmount","toString","invokeWasmRead","reader","StringReader","swapAmount","readUint128","readAddress","reverseHex","read","getContractState","fee","admin_fee","owner","future_owner","initial_amp","future_amp","initial_amp_time","readUint64","future_amp_time","is_killed","readBoolean","registerClient","Title","Typography","Text","Option","Select","Swap","dispatch","onSwap","tokenList","useState","fromAmount","setFromAmount","toAmount","setToAmount","fromToken","setFromToken","toToken","setToToken","slippage","setSlippage","price","setPrice","updateFromAmount","outAmount","onTokenChange","isFrom","fromAmt","useEffect","setInterval","network","getBlockHeight","res","clearInterval","balanceEnough","className","style","backgroundColor","padding","margin","width","borderRadius","span","offset","color","borderWidth","onClick","textDecoration","Group","compact","size","onChange","num","defaultValue","token","lineHeight","marginTop","marginRight","target","textAlign","connectWallet","disabled","loading","asset","getAccount","alert","ReduxApp","connect","ownProps","b","tokenFrom","tokenTo","minAmount","message","info","connected","accountShow","length","len","substr","level","maxWidth","store","configureStore","reducer","window","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ivCAAA,IAAIA,EAAM,CACT,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,SAAU,IACV,YAAa,IACb,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,QAAS,IACT,WAAY,IACZ,YAAa,IACb,eAAgB,IAChB,YAAa,IACb,eAAgB,IAChB,YAAa,IACb,eAAgB,IAChB,SAAU,IACV,YAAa,IACb,YAAa,IACb,eAAgB,IAChB,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,SAAU,IACV,YAAa,IACb,cAAe,IACf,iBAAkB,IAClB,cAAe,IACf,iBAAkB,IAClB,QAAS,IACT,WAAY,IACZ,SAAU,IACV,YAAa,IACb,WAAY,IACZ,cAAe,KAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,mQCnEPY,EAAgBC,YAAY,CACrCC,KAAM,QACNC,aAAc,CACVC,YAAaC,EACbC,cAAc,EACdC,QAAS,GACTC,SAAU,CACNC,KAAM,EACNC,KAAM,EACNC,KAAM,GAEVC,WAAY,CACRC,OAAQ,EACRC,UAAW,CACPL,KAAM,MACNC,KAAM,MACNC,KAAM,SAIlBI,SAAU,CACNC,MAAO,SAACC,EAAOC,GACXD,EAAMV,QAAUW,EAAOC,SAE3BC,OAAQ,SAAAH,GACJA,EAAMV,QAAU,IAEpBc,aAAc,SAACJ,EAAOC,GAClBD,EAAMX,aAAeY,EAAOC,SAEhCG,cAAe,SAACL,EAAOC,GACnB,IAAK,IAAMK,KAAOL,EAAOC,QACrBF,EAAMT,SAASe,GAAOL,EAAOC,QAAQI,IAG7CC,iBAAkB,SAACP,EAAOC,GACtBtB,OAAO6B,OAAOR,EAAML,WAAYM,EAAOC,a,EAKlBnB,EAAc0B,Q,KAAhCV,M,EAAOI,O,gCCzCTO,EAAa,uCAAG,WAAOpB,EAASqB,GAAhB,qBAAAC,EAAA,6DACnBC,EAAO,CAAC,CAAEC,KAAM,UAAWC,MAAOzB,IAClC0B,EAAiBL,EAAM3C,KAAI,SAAAiD,GAAI,OACjCC,SAAOC,IAAIC,cAAcC,WAAW,CAAEC,WAAYL,EAAKM,QAASC,UAAW,YAAaX,YAHnE,SAKLY,QAAQC,IAAIV,GALP,cAKrBW,EALqB,OAMrBpC,EAAWoC,EAAQ3D,KAAI,SAAC+C,EAAOa,GAC/B,IAAIC,EAAUC,QAAMC,gBAAgBhB,GAGpC,OADAc,EADY,IAAIG,YAAUH,GAASI,IAAvB,SAA2B,GAAMtB,EAAMiB,GAAGM,UACxCC,WACP,eAAGxB,EAAMiB,GAAG3C,KAAO4C,MAVL,kBAalBlD,OAAO6B,OAAP,MAAA7B,OAAM,CAAQ,IAAR,mBAAeY,MAbH,2CAAH,wDAgBnB,SAAe6C,EAAtB,0C,4CAAO,WAAwBpC,EAAOqC,EAASC,EAAUC,EAAUC,GAA5D,qBAAA5B,EAAA,6DACG6B,EAAczC,EAAMb,YAAYwB,MAAM+B,MAAK,SAAAC,GAAC,OAAIA,EAAE1D,OAASoD,KAC3DO,EAAe5C,EAAMb,YAAYwB,MAAM+B,MAAK,SAAAC,GAAC,OAAIA,EAAE1D,OAASqD,KAC5DO,EAAS,CACXvB,WAAYtB,EAAMb,YAAY2D,cAC9BtB,UAAW,mBACXuB,SAAU,KACVC,SAAU,IACVnC,KAAM,CACF,CAAEC,KAAM,UAAWC,MAAOf,EAAMV,SAChC,CAAEwB,KAAM,UAAWC,MAAO0B,EAAYQ,OACtC,CAAEnC,KAAM,UAAWC,MAAO6B,EAAaK,OACvC,CACInC,KAAM,OACNC,MAAQ,IAAIiB,YAAUO,GAAWW,aAAzB,KAAD,IAAuC,GAAMT,EAAYP,UAASiB,QAAQ,IAClF,CACCrC,KAAM,OACNC,MAAQ,IAAIiB,YAAUQ,GAAeU,aAA7B,KAAD,IAA2C,GAAMN,EAAaV,UAASiB,QAAQ,MAKlGC,QAAQC,IAAIR,GAtBT,SAwBkB3B,SAAOC,IAAIC,cAAckC,WAAWT,GAxBtD,cAwBCU,EAxBD,yBA0BIA,GA1BJ,4C,sBA6BA,SAAeC,EAAtB,wC,4CAAO,WAAqCxD,EAAOqC,EAASoB,EAAQnB,GAA7D,2BAAA1B,EAAA,6DACG6B,EAAczC,EAAMb,YAAYwB,MAAM+B,MAAK,SAAAC,GAAC,OAAIA,EAAE1D,OAASoD,KAC3DO,EAAe5C,EAAMb,YAAYwB,MAAM+B,MAAK,SAAAC,GAAC,OAAIA,EAAE1D,OAASqD,KAElEoB,GADIA,EAAmB,IAAI1B,YAAUyB,IACDP,aAAjB,SAA8B,GAAMT,EAAYP,UAE7DrB,EAAO,CACT,CAAEC,KAAM,OAAQC,MAAO0B,EAAYQ,MAAMU,YACzC,CAAE7C,KAAM,OAAQC,MAAO6B,EAAaK,MAAMU,YAC1C,CAAE7C,KAAM,OAAQC,MAAO2C,EAAiBP,YATzC,SAYoBjC,SAAOC,IAAIC,cAAcwC,eAAe,CAC3DtC,WAAYtB,EAAMb,YAAY2D,cAC9BtB,UAAW,oBACXX,KAAMA,IAfP,cAYG0C,EAZH,OAkBGM,EAAS,IAAI/B,QAAMgC,aAAaP,GAChCQ,EAAaF,EAAOG,cAAP,SAAwB,GAAMpB,EAAaV,SAnB3D,kBAqBI6B,GArBJ,6C,sBAsCP,SAASE,EAAYJ,GAEjB,OADa/B,QAAMoC,WAAWL,EAAOM,KAAK,KAIvC,SAAeC,EAAtB,kC,4CAAO,WAAgCpE,GAAhC,iBAAAY,EAAA,sEACoBM,SAAOC,IAAIC,cAAcwC,eAAe,CAC3DtC,WAAYtB,EAAMb,YAAY2D,cAC9BtB,UAAW,qBAHZ,cACG+B,EADH,OAMGM,EAAS,IAAI/B,QAAMgC,aAAaP,GANnC,kBAOI,CACH5C,MAAO,CAACsD,EAAYJ,GAASI,EAAYJ,GAASI,EAAYJ,IAC9DtE,SAAU,CAACsE,EAAOG,cAAeH,EAAOG,cAAeH,EAAOG,eAC9DK,IAAKR,EAAOG,cACZM,UAAWT,EAAOG,cAClBO,MAAON,EAAYJ,GACnBW,aAAcP,EAAYJ,GAC1BY,YAAaZ,EAAOG,cACpBU,WAAYb,EAAOG,cACnBW,iBAAkBd,EAAOe,aACzBC,gBAAiBhB,EAAOe,aACxBE,UAAWjB,EAAOkB,gBAlBnB,4C,sBClFP7D,SAAO8D,eAAe,I,IAEdC,EAAiBC,IAAjBD,MAAOE,EAAUD,IAAVC,KACPC,EAAWC,IAAXD,OAEFE,EAAO,SAAC,GAAwB,IAAtBtF,EAAqB,EAArBA,MAAOS,EAAc,EAAdA,QACb8E,EAAqB9E,EAArB8E,SAAUC,EAAW/E,EAAX+E,OACZ7E,EAAQX,EAAMb,YAAYwB,MAC1B8E,EAAY9E,EAAM3C,KAAI,SAAA+C,GAAK,OAAIA,EAAM9B,QAHR,EAICyG,mBAAS,KAJV,mBAI5BC,EAJ4B,KAIhBC,EAJgB,OAKHF,mBAAS,KALN,mBAK5BG,EAL4B,KAKlBC,EALkB,OAMDJ,mBAASD,EAAU,IANlB,mBAM5BM,EAN4B,KAMjBC,EANiB,OAOLN,mBAASD,EAAU,IAPd,mBAO5BQ,EAP4B,KAOnBC,EAPmB,OAQHR,mBAAS,GARN,mBAQ5BS,EAR4B,KAQlBC,EARkB,OASTV,mBAAS,GATA,mBAS5BW,EAT4B,KASrBC,EATqB,KAmB7BC,EAAgB,uCAAG,WAAO9C,GAAP,eAAA7C,EAAA,6DACvBgF,EAAcnC,GADS,SAECD,EAAsBxD,EAAO+F,EAAWtC,EAAQwC,GAFjD,OAEjBO,EAFiB,OAGvBV,EAAYU,GACZF,EAASE,EAAY/C,GAJE,2CAAH,sDAOhBgD,EAAgB,SAAC1F,EAAO2F,GAC5B,IAAIC,EAAUhB,EACVe,GACE3F,IAAUkF,IACZC,EAAWH,GACXY,EAAUd,GAEZG,EAAajF,KAETA,IAAUgF,GACZC,EAAaC,GAEfC,EAAWnF,IAEbwF,EAAiBI,IAGnBC,qBAAU,WACR,IAAMzI,EAAK0I,YAAW,sBAAC,kCAAAjG,EAAA,+EAEEM,SAAOC,IAAI2F,QAAQC,iBAFrB,UAEbnH,EAFa,SAGfI,EAAML,WAAWC,OAASA,GAHX,oBAIjBwD,QAAQC,IAAI,kBAAmBzD,GAC/B2F,EAAShF,iBAAiB,CAAEX,WACN,KAAlBI,EAAMV,QANO,kCAOKoB,EAAcV,EAAMV,QAASqB,GAPlC,QAOXgB,EAPW,OAQf4D,EAASlF,cAAcsB,GARR,yBAUCyC,EAAiBpE,GAVlB,QAUXgH,EAVW,OAWjBzB,EAAShF,kBAAT,mBACGkF,EAAU,GAAKuB,EAAIzH,SAAS,GAAb,SAAmB,GAAMoB,EAAM,GAAGuB,UADpD,cAEGuD,EAAU,GAAKuB,EAAIzH,SAAS,GAAb,SAAmB,GAAMoB,EAAM,GAAGuB,UAFpD,cAGGuD,EAAU,GAAKuB,EAAIzH,SAAS,GAAb,SAAmB,GAAMoB,EAAM,GAAGuB,UAHpD,IAXiB,0DAkBnBkB,QAAQC,IAAI,sBAAZ,MAlBmB,0DAoBpB,KACH,OAAO,kBAAM4D,cAAc9I,OAG7B,IAAM+I,EAAgBvB,GAAc3F,EAAMT,SAASwG,GAEnD,OACE,sBAAKoB,UAAU,mBAAmBC,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,OAAQC,OAAQ,SAAUC,MAAO,QAASC,aAAc,QAArI,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SAAc,6CACd,eAAC,IAAD,CAAKA,KAAM,EAAGC,OAAQ,EAAGP,MAAO,CAAEQ,MAAO,QAAzC,cAAoD,eAAC,IAAD,CAAQR,MAAO,CAAES,YAAa,GAAKC,QAAS,WAC9FvB,EAAiBvG,EAAMT,SAASwG,KADkB,UAEjD,yBAAQqB,MAAO,CAAEW,eAAgB,aAAjC,wBAA4D/H,EAAMT,SAASwG,MAF1B,OAApD,YAKJ,eAAC,IAAMiC,MAAP,CAAaC,SAAO,EAACC,KAAK,QAA1B,UACE,cAAC,IAAD,CAAaA,KAAK,QAAQnH,MAAO4E,EAAYyB,MAAO,CAAEI,MAAO,OAASW,SAAU,SAAAC,GAC9E7B,EAAiB6B,IAChBC,aAAc1C,IACjB,cAAC,IAAD,CAAQ0C,aAActC,EAAWhF,MAAOgF,EAAWqB,MAAO,CAAEI,MAAO,OAASW,SAAU,SAAApH,GAAK,OAAI0F,EAAc1F,GAAO,IAApH,SAEI0E,EAAUzH,KAAI,SAAAsK,GAAK,OACjB,cAAClD,EAAD,CAAQrE,MAAOuH,EAAf,SAA6C,qBAAKlB,MAAO,CAAEmB,WAAY,OAAQX,MAAO,QAAzC,SAAoDU,KAAtEA,EAAM3E,oBAKzC,qBAAKyD,MAAO,CAAEoB,UAAW,QAAzB,SACE,eAAC,IAAD,eAAM,cAAC,IAAD,CAAKd,KAAM,EAAX,SAAc,8CAApB,SAEF,eAAC,IAAMM,MAAP,CAAaC,SAAO,EAACC,KAAK,QAA1B,UACE,cAAC,IAAD,CAAaA,KAAK,QAAQnH,MAAO8E,EAC/BuB,MAAO,CAAEI,MAAO,OAASa,aAAcxC,IACzC,cAAC,IAAD,CAAQwC,aAAcpC,EAASlF,MAAOkF,EAASmB,MAAO,CAAEI,MAAO,OAASW,SAAU,SAAApH,GAAK,OAAI0F,EAAc1F,GAAO,IAAhH,SAEI0E,EAAUzH,KAAI,SAAAsK,GAAK,OACjB,cAAClD,EAAD,CAAQrE,MAAOuH,EAAf,SAA6C,qBAAKlB,MAAO,CAAEmB,WAAY,OAAQX,MAAO,QAAzC,SAAoDU,KAAtEA,EAAM3E,oBAKzC,sBAAKyD,MAAO,CAAEG,OAAQ,aAAtB,UACE,cAACpC,EAAD,CAAMiC,MAAO,CAAEqB,YAAa,OAA5B,iCACA,eAAC,IAAMT,MAAP,CAAaG,SAjGM,SAAA5J,GACvB6H,EAAY7H,EAAEmK,OAAO3H,QAgGwBA,MAAOoF,EAAhD,UACE,cAAC,IAAD,CAAOpF,MAAO,EAAd,kBACA,cAAC,IAAD,CAAOA,MAAO,GAAd,kBACA,cAAC,IAAD,CAAOA,MAAO,GAAd,wBAGJ,8BACE,eAACoE,EAAD,qBAAckB,EAAd,IAAsBJ,EAAtB,MAAkCF,OAEpC,qBAAKqB,MAAO,CAAEuB,UAAW,SAAUH,UAAW,QAA9C,SACqB,KAAlBxI,EAAMV,QACL,cAAC,IAAD,CAAQ4I,KAAK,QAAQJ,QAAS,kB,6CAAMc,CAAc5I,EAAOuF,IAAWzE,KAAK,UAAUsG,MAAO,CAAEI,MAAO,MAAOD,OAAQ,aAAlH,4BAEE,cAAC,IAAD,CAAQW,KAAK,QAAQW,UAAW3B,EAAe4B,QAAS9I,EAAMX,aAAcyI,QA1GhE,SAACvJ,GACrBiH,EAAOO,EAAWE,EAASN,EAAYE,GAAY,IAAOM,GAAY,MAyGsCrF,KAAK,UAAUsG,MAAO,CAAEI,MAAO,MAAOD,OAAQ,aAAlJ,SACIL,EAAgB,UAAY,8B,4CAQ5C,WAA6BlH,EAAOuF,GAApC,iBAAA3E,EAAA,yDACwB,KAAlBZ,EAAMV,QADZ,0CAG4B4B,SAAOC,IAAI4H,MAAMC,aAH7C,UAIsB,MADV1J,EAHZ,yCAK6BoB,EAAcpB,EAASU,EAAMb,YAAYwB,OALtE,OAKYpB,EALZ,OAMQgG,EAASlF,cAAcd,GACvBgG,EAASxF,MAAMT,GAPvB,0DAUM2J,MAAM,EAAD,IACLA,MAAM,gCAXZ,gCAcI1D,EAASpF,SAdb,2D,sBAkBA,IAuFM+I,EAAWC,aANO,SAACnJ,GACvB,MAAO,CACLA,MAAOA,MAxBgB,SAACuF,EAAU6D,GACpC,MAAO,CACL7D,SAAU,CACRxF,MAAO,SAACT,GACNiG,EAASxG,EAAc0B,QAAQV,MAAMT,KAEvCa,OAAQ,WACNoF,EAASxG,EAAc0B,QAAQN,WAEjCC,aAAc,SAACiJ,GACb9D,EAASxG,EAAc0B,QAAQL,aAAaiJ,KAE9ChJ,cAAe,SAACU,GACdwE,EAASxG,EAAc0B,QAAQJ,cAAcU,KAE/CR,iBAAkB,SAACQ,GACjBwE,EAASxG,EAAc0B,QAAQF,iBAAiBQ,SAYvCoI,EAvFJ,SAAC,GAAyB,IAAvBnJ,EAAsB,EAAtBA,MAAOuF,EAAe,EAAfA,SACfC,EAAM,uCAAG,WAAO8D,EAAWC,EAAS9F,EAAQ+F,GAAnC,eAAA5I,EAAA,6DACb2E,EAASnF,cAAa,GADT,kBAGUgC,EAASpC,EAAOsJ,EAAWC,EAAS9F,EAAQ+F,GAHtD,OAGPjG,EAHO,OAIXH,QAAQC,IAAIE,GAJD,gDAMD,aAAN,KACFkG,IAAQC,KAAK,0BAEbtG,QAAQC,IAAR,MACA4F,MAAM,EAAD,KAVI,yBAaX1D,EAASnF,cAAa,GAbX,4EAAH,4DAiBRuJ,EAAY3J,EAAMV,QACJ,KAAdqK,IACFA,EAAY,kBAGd,IAAMlJ,EAAU,CAAE8E,WAAUC,UAEtBoE,EAAc,SAACtK,GAGnB,OAAIA,EAAQuK,QAAUC,GACbxK,EAEFA,EAAQyK,OAAO,EALV,GAME,MAAQzK,EAAQyK,OAAOzK,EAAQuK,OANjC,IAUd,OAAO,sBAAKzC,MAAO,CAAEC,gBAAiB,UAAWzH,OAAQ,QAAlD,UACL,sBAAKwH,MAAO,CAAEuB,UAAW,UAAzB,UACE,cAAC1D,EAAD,CAAO+E,MAAO,EAAd,wBACA,sBAAK5C,MAAO,CAAEG,OAAQ,YAAaC,MAAO,MAAOyC,SAAU,QAAStB,UAAW,UAA/E,UACE,cAAC1D,EAAD,CAAO+E,MAAO,EAAd,6BACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAKtC,KAAM,EAAGN,MAAO,CAAEuB,UAAW,QAAlC,SAA6C,8CAAiB3I,EAAML,WAAWC,YAC/E,cAAC,IAAD,CAAK8H,KAAM,EAAGN,MAAO,CAAEuB,UAAW,UAAlC,SAA+C,6CAAgBiB,EAAY5J,EAAMV,cACjF,cAAC,IAAD,CAAKoI,KAAM,EAAGN,MAAO,CAAEuB,UAAW,SAAlC,SAA8C,gDAAmBiB,EAAY5J,EAAMb,YAAY2D,uBAEjG,eAAC,IAAD,WACE,cAAC,IAAD,CAAK4E,KAAM,EAAGN,MAAO,CAAEuB,UAAW,QAAlC,SAA6C,sDAAyB3I,EAAML,WAAWH,UACvF,cAAC,IAAD,CAAKkI,KAAM,EAAGN,MAAO,CAAEuB,UAAW,UAAlC,SAA+C,sDAAyB3I,EAAML,WAAWD,UACzF,cAAC,IAAD,CAAKgI,KAAM,EAAGN,MAAO,CAAEuB,UAAW,SAAlC,SAA8C,sDAAyB3I,EAAML,WAAWF,mBAM7F6F,EAAK,CAAEtF,QAAOS,kBAkCbyJ,EAAQC,YAAe,CAC3BC,QAASrL,EAAcqL,UAGzBC,OAAOH,MAAQA,EACf,IAQeI,EARH,WACV,OACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAChB,EAAD,OCxPSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.700bb8ed.chunk.js","sourcesContent":["var map = {\n\t\"./aes\": 292,\n\t\"./aes.js\": 292,\n\t\"./big\": 293,\n\t\"./big.js\": 293,\n\t\"./ctx\": 197,\n\t\"./ctx.js\": 197,\n\t\"./ecdh\": 294,\n\t\"./ecdh.js\": 294,\n\t\"./ecp\": 295,\n\t\"./ecp.js\": 295,\n\t\"./ecp2\": 296,\n\t\"./ecp2.js\": 296,\n\t\"./ff\": 297,\n\t\"./ff.js\": 297,\n\t\"./fp\": 298,\n\t\"./fp.js\": 298,\n\t\"./fp12\": 299,\n\t\"./fp12.js\": 299,\n\t\"./fp2\": 300,\n\t\"./fp2.js\": 300,\n\t\"./fp4\": 301,\n\t\"./fp4.js\": 301,\n\t\"./gcm\": 302,\n\t\"./gcm.js\": 302,\n\t\"./hash256\": 303,\n\t\"./hash256.js\": 303,\n\t\"./hash384\": 304,\n\t\"./hash384.js\": 304,\n\t\"./hash512\": 305,\n\t\"./hash512.js\": 305,\n\t\"./mpin\": 306,\n\t\"./mpin.js\": 306,\n\t\"./newhope\": 307,\n\t\"./newhope.js\": 307,\n\t\"./nhs\": 308,\n\t\"./nhs.js\": 308,\n\t\"./pair\": 309,\n\t\"./pair.js\": 309,\n\t\"./rand\": 310,\n\t\"./rand.js\": 310,\n\t\"./rom_curve\": 311,\n\t\"./rom_curve.js\": 311,\n\t\"./rom_field\": 312,\n\t\"./rom_field.js\": 312,\n\t\"./rsa\": 313,\n\t\"./rsa.js\": 313,\n\t\"./sha3\": 314,\n\t\"./sha3.js\": 314,\n\t\"./uint64\": 315,\n\t\"./uint64.js\": 315\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 618;","import { createSlice } from '@reduxjs/toolkit'\r\n//import config from './testnet-config.json'\r\nimport config from './mainnet-config.json'\r\n\r\nexport const AppStateSlice = createSlice({\r\n    name: 'alley',\r\n    initialState: {\r\n        chainConfig: config,\r\n        hasPendingTx: false,\r\n        account: '',\r\n        balances: {\r\n            USDT: 0,\r\n            SUSD: 0,\r\n            USDC: 0,\r\n        },\r\n        blockchain: {\r\n            height: 0,\r\n            liquidity: {\r\n                USDT: 12345,\r\n                SUSD: 23456,\r\n                USDC: 23124,\r\n            }\r\n        }\r\n    },\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.account = action.payload;\r\n        },\r\n        logout: state => {\r\n            state.account = '';\r\n        },\r\n        setPendingTx: (state, action) => {\r\n            state.hasPendingTx = action.payload;\r\n        },\r\n        updateBalance: (state, action) => {\r\n            for (const key in action.payload) {\r\n                state.balances[key] = action.payload[key]\r\n            }\r\n        },\r\n        updateBlockchain: (state, action) => {\r\n            Object.assign(state.blockchain, action.payload)\r\n        }\r\n    }\r\n})\r\n\r\nexport const { login, logout } = AppStateSlice.actions\r\n","import { client } from '@ont-dev/ontology-dapi'\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { utils } from 'ontology-ts-sdk'\r\n\r\nexport const fetchBalances = async (account, coins) => {\r\n    const args = [{ type: 'Address', value: account }]\r\n    const balanceFutures = coins.map(coin =>\r\n        client.api.smartContract.invokeRead({ scriptHash: coin.address, operation: 'balanceOf', args })\r\n    );\r\n    let results = await Promise.all(balanceFutures);\r\n    var balances = results.map((value, i) => {\r\n        let balance = utils.bigIntFromBytes(value)\r\n        const num = new BigNumber(balance).div(10 ** coins[i].decimal)\r\n        balance = num.toNumber()\r\n        return { [coins[i].name]: balance }\r\n    })\r\n\r\n    return Object.assign({}, ...balances)\r\n}\r\n\r\nexport async function exchange(state, tokenIn, tokenOut, inAmount, minOutAmount) {\r\n    const tokenInInfo = state.chainConfig.coins.find(v => v.name === tokenIn)\r\n    const tokenOutInfo = state.chainConfig.coins.find(v => v.name === tokenOut)\r\n    const params = {\r\n        scriptHash: state.chainConfig.contract_addr,\r\n        operation: 'approve_exchange',\r\n        gasPrice: 2500,\r\n        gasLimit: 2000000,\r\n        args: [\r\n            { type: 'Address', value: state.account },\r\n            { type: 'Integer', value: tokenInInfo.index },\r\n            { type: 'Integer', value: tokenOutInfo.index },\r\n            {\r\n                type: 'Long',\r\n                value: (new BigNumber(inAmount)).multipliedBy(10 ** tokenInInfo.decimal).toFixed(0)\r\n            }, {\r\n                type: 'Long',\r\n                value: (new BigNumber(minOutAmount)).multipliedBy(10 ** tokenOutInfo.decimal).toFixed(0)\r\n            }\r\n        ]\r\n    }\r\n\r\n    console.log(params)\r\n\r\n    let response = await client.api.smartContract.invokeWasm(params)\r\n\r\n    return response\r\n}\r\n\r\nexport async function getSwappedTokenAmount(state, tokenIn, amount, tokenOut) {\r\n    const tokenInInfo = state.chainConfig.coins.find(v => v.name === tokenIn)\r\n    const tokenOutInfo = state.chainConfig.coins.find(v => v.name === tokenOut)\r\n    let underlyingAmount = new BigNumber(amount)\r\n    underlyingAmount = underlyingAmount.multipliedBy(10 ** tokenInInfo.decimal)\r\n\r\n    const args = [\r\n        { type: 'Long', value: tokenInInfo.index.toString() },\r\n        { type: 'Long', value: tokenOutInfo.index.toString() },\r\n        { type: 'Long', value: underlyingAmount.toFixed() },\r\n    ]\r\n\r\n    const response = await client.api.smartContract.invokeWasmRead({\r\n        scriptHash: state.chainConfig.contract_addr,\r\n        operation: 'get_dy_underlying',\r\n        args: args\r\n    })\r\n\r\n    const reader = new utils.StringReader(response)\r\n    const swapAmount = reader.readUint128() / (10 ** tokenOutInfo.decimal)\r\n\r\n    return swapAmount;\r\n}\r\n\r\nclass ContractState {\r\n    coins // : [NeoOep4Token; N_COINS],\r\n    balances// : [U128; N_COINS], // 采用底层token精度\r\n    fee//: U128,                 // fee* 1e10\r\n    admin_fee//: U128,           // admin_fee *1e10\r\n    owner//: Address,\r\n    future_owner//: Address,\r\n    initial_amp//: U128,\r\n    future_amp//: U128,\r\n    initial_amp_time//: u64,\r\n    future_amp_time//: u64,\r\n    is_killed//: bool,\r\n}\r\n\r\nfunction readAddress(reader) {\r\n    const addr = utils.reverseHex(reader.read(20))\r\n    return addr\r\n}\r\n\r\nexport async function getContractState(state) {\r\n    const response = await client.api.smartContract.invokeWasmRead({\r\n        scriptHash: state.chainConfig.contract_addr,\r\n        operation: 'get_global_state',\r\n    })\r\n\r\n    const reader = new utils.StringReader(response)\r\n    return {\r\n        coins: [readAddress(reader), readAddress(reader), readAddress(reader)],\r\n        balances: [reader.readUint128(), reader.readUint128(), reader.readUint128()],\r\n        fee: reader.readUint128(),\r\n        admin_fee: reader.readUint128(),\r\n        owner: readAddress(reader),\r\n        future_owner: readAddress(reader),\r\n        initial_amp: reader.readUint128(),\r\n        future_amp: reader.readUint128(),\r\n        initial_amp_time: reader.readUint64(),\r\n        future_amp_time: reader.readUint64(),\r\n        is_killed: reader.readBoolean(),\r\n    };\r\n}","import \"antd/dist/antd.css\"\r\nimport { message, Typography, Radio, Input, InputNumber, Col, Row, Select, Button, Card, Descriptions } from 'antd';\r\nimport { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Provider } from 'react-redux'\r\nimport { client } from '@ont-dev/ontology-dapi'\r\nimport { AppStateSlice } from \"./AppState\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { exchange, fetchBalances, getContractState, getSwappedTokenAmount } from \"./contracts\";\r\n\r\nclient.registerClient({});\r\n\r\nconst { Title, Text, } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst Swap = ({ state, actions }) => {\r\n  const { dispatch, onSwap } = actions\r\n  const coins = state.chainConfig.coins\r\n  const tokenList = coins.map(value => value.name)\r\n  const [fromAmount, setFromAmount] = useState(100.00);\r\n  const [toAmount, setToAmount] = useState(100.00);\r\n  const [fromToken, setFromToken] = useState(tokenList[0]);\r\n  const [toToken, setToToken] = useState(tokenList[1]);\r\n  const [slippage, setSlippage] = useState(5); // value / 1000\r\n  const [price, setPrice] = useState(1.0)\r\n\r\n  const onSlippageChange = e => {\r\n    setSlippage(e.target.value);\r\n  };\r\n\r\n  const onComfirmSwap = (e) => {\r\n    onSwap(fromToken, toToken, fromAmount, toAmount * (1000 - slippage) / 1000)\r\n  }\r\n\r\n  const updateFromAmount = async (amount) => {\r\n    setFromAmount(amount)\r\n    const outAmount = await getSwappedTokenAmount(state, fromToken, amount, toToken)\r\n    setToAmount(outAmount)\r\n    setPrice(outAmount / amount)\r\n  }\r\n\r\n  const onTokenChange = (value, isFrom) => {\r\n    let fromAmt = fromAmount\r\n    if (isFrom) {\r\n      if (value === toToken) {\r\n        setToToken(fromToken);\r\n        fromAmt = toAmount\r\n      }\r\n      setFromToken(value);\r\n    } else {\r\n      if (value === fromToken) {\r\n        setFromToken(toToken);\r\n      }\r\n      setToToken(value);\r\n    }\r\n    updateFromAmount(fromAmt);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(async () => {\r\n      try {\r\n        const height = await client.api.network.getBlockHeight();\r\n        if (state.blockchain.height < height) {\r\n          console.log('current height:', height)\r\n          dispatch.updateBlockchain({ height })\r\n          if (state.account !== '') {\r\n            let results = await fetchBalances(state.account, coins)\r\n            dispatch.updateBalance(results)\r\n          }\r\n          const res = await getContractState(state)\r\n          dispatch.updateBlockchain({\r\n            [tokenList[0]]: res.balances[0] / (10 ** coins[0].decimal),\r\n            [tokenList[1]]: res.balances[1] / (10 ** coins[1].decimal),\r\n            [tokenList[2]]: res.balances[2] / (10 ** coins[2].decimal),\r\n          })\r\n        }\r\n      } catch (e) {\r\n        console.log('get balance error: ', e)\r\n      }\r\n    }, 1000)\r\n    return () => clearInterval(id)\r\n  })\r\n\r\n  const balanceEnough = fromAmount <= state.balances[fromToken]\r\n\r\n  return (\r\n    <div className=\"swap-input-group\" style={{ backgroundColor: '#fff', padding: '20px', margin: \"0 auto\", width: \"500px\", borderRadius: '10px' }}>\r\n      <div>\r\n        <Row>\r\n          <Col span={8}><strong>Input</strong></Col>\r\n          <Col span={6} offset={9} style={{ color: '#777' }}> <Button style={{ borderWidth: 0 }} onClick={() => {\r\n            updateFromAmount(state.balances[fromToken])\r\n          }}><strong style={{ textDecoration: 'underline' }}>Available: {state.balances[fromToken]}</strong> </Button> </Col>\r\n        </Row>\r\n      </div>\r\n      <Input.Group compact size='large'>\r\n        <InputNumber size='large' value={fromAmount} style={{ width: '70%' }} onChange={num => {\r\n          updateFromAmount(num);\r\n        }} defaultValue={fromAmount} />\r\n        <Select defaultValue={fromToken} value={fromToken} style={{ width: '30%' }} onChange={value => onTokenChange(value, true)}>\r\n          {\r\n            tokenList.map(token => (\r\n              <Option value={token} key={token.toString()}><div style={{ lineHeight: '36px', color: \"#f9f\" }}>{token}</div></Option>\r\n            ))\r\n          }\r\n        </Select>\r\n      </Input.Group>\r\n      <div style={{ marginTop: \"15px\" }}>\r\n        <Row> <Col span={8}><strong>Output</strong></Col> </Row>\r\n      </div>\r\n      <Input.Group compact size='large'>\r\n        <InputNumber size='large' value={toAmount}\r\n          style={{ width: '70%' }} defaultValue={toAmount} />\r\n        <Select defaultValue={toToken} value={toToken} style={{ width: '30%' }} onChange={value => onTokenChange(value, false)}>\r\n          {\r\n            tokenList.map(token => (\r\n              <Option value={token} key={token.toString()}><div style={{ lineHeight: '36px', color: \"#f9f\" }}>{token}</div></Option>\r\n            ))\r\n          }\r\n        </Select>\r\n      </Input.Group>\r\n      <div style={{ margin: '15px auto' }}>\r\n        <Text style={{ marginRight: \"5px\" }}>Slippage Tolerance:</Text>\r\n        <Radio.Group onChange={onSlippageChange} value={slippage}>\r\n          <Radio value={5}>0.5%</Radio>\r\n          <Radio value={10}>1.0%</Radio>\r\n          <Radio value={20}>2.0%</Radio>\r\n        </Radio.Group>\r\n      </div>\r\n      <div>\r\n        <Text>Price: {price} {toToken} / {fromToken}</Text>\r\n      </div>\r\n      <div style={{ textAlign: 'center', marginTop: '30px' }}>\r\n        {state.account === '' ? (\r\n          <Button size='large' onClick={() => connectWallet(state, dispatch)} type='primary' style={{ width: \"50%\", margin: '10px auto' }}>Connect Wallet</Button>\r\n        ) : (\r\n            <Button size='large' disabled={!balanceEnough} loading={state.hasPendingTx} onClick={onComfirmSwap} type='primary' style={{ width: \"50%\", margin: '10px auto' }}>\r\n              { balanceEnough ? 'Comfirm' : 'Insufficent Balance'}\r\n            </Button>\r\n          )}\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nasync function connectWallet(state, dispatch) {\r\n  if (state.account === '') {\r\n    try {\r\n      const account = await client.api.asset.getAccount()\r\n      if (account !== '') {\r\n        let balances = await fetchBalances(account, state.chainConfig.coins)\r\n        dispatch.updateBalance(balances)\r\n        dispatch.login(account)\r\n      }\r\n    } catch (e) {\r\n      alert(e)\r\n      alert('please install cyano wallet!')\r\n    }\r\n  } else {\r\n    dispatch.logout()\r\n  }\r\n}\r\n\r\nconst _App = ({ state, dispatch }) => {\r\n  const onSwap = async (tokenFrom, tokenTo, amount, minAmount) => {\r\n    dispatch.setPendingTx(true)\r\n    try {\r\n      let response = await exchange(state, tokenFrom, tokenTo, amount, minAmount)\r\n      console.log(response)\r\n    } catch (e) {\r\n      if (e === 'CANCELED') {\r\n        message.info(\"Transaction canceled!\");\r\n      } else {\r\n        console.log(e)\r\n        alert(e)\r\n      }\r\n    } finally {\r\n      dispatch.setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  let connected = state.account\r\n  if (connected === '') {\r\n    connected = 'Connect Wallet'\r\n  }\r\n\r\n  const actions = { dispatch, onSwap }\r\n\r\n  const accountShow = (account) => {\r\n    const len = 5\r\n    let show = ''\r\n    if (account.length <= len * 3) {\r\n      return account\r\n    }\r\n    show = account.substr(0, len);\r\n    show = show + '...' + account.substr(account.length - len);\r\n    return show\r\n  }\r\n\r\n  return <div style={{ backgroundColor: '#f3e9e9', height: '100%' }}>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Title level={1}>Alley Swap</Title>\r\n      <div style={{ margin: '20px auto', width: '80%', maxWidth: '600px', textAlign: 'center' }}>\r\n        <Title level={3}>Market Overview</Title>\r\n        <Row>\r\n          <Col span={8} style={{ textAlign: 'left' }} ><strong>Height: {state.blockchain.height}</strong></Col>\r\n          <Col span={8} style={{ textAlign: 'center' }} ><strong>Login: {accountShow(state.account)}</strong></Col>\r\n          <Col span={8} style={{ textAlign: 'right' }} ><strong>Contract: {accountShow(state.chainConfig.contract_addr)}</strong></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={8} style={{ textAlign: 'left' }} ><strong>Luiqidity USDT: {state.blockchain.USDT}</strong></Col>\r\n          <Col span={8} style={{ textAlign: 'center' }} ><strong>Luiqidity USDC: {state.blockchain.USDC}</strong></Col>\r\n          <Col span={8} style={{ textAlign: 'right' }} ><strong>Luiqidity SUSD: {state.blockchain.SUSD}</strong></Col>\r\n        </Row>\r\n\r\n      </div>\r\n    </div>\r\n    {/* <Button type='primary' onClick={() => connectWallet(state, dispatch)}>{connected}</Button> */}\r\n    {Swap({ state, actions })}\r\n  </div >\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    dispatch: {\r\n      login: (account) => {\r\n        dispatch(AppStateSlice.actions.login(account))\r\n      },\r\n      logout: () => {\r\n        dispatch(AppStateSlice.actions.logout())\r\n      },\r\n      setPendingTx: (b) => {\r\n        dispatch(AppStateSlice.actions.setPendingTx(b))\r\n      },\r\n      updateBalance: (value) => {\r\n        dispatch(AppStateSlice.actions.updateBalance(value))\r\n      },\r\n      updateBlockchain: (value) => {\r\n        dispatch(AppStateSlice.actions.updateBlockchain(value))\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  }\r\n}\r\n\r\nconst ReduxApp = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n\r\nconst store = configureStore({\r\n  reducer: AppStateSlice.reducer\r\n})\r\n\r\nwindow.store = store;\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ReduxApp />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}